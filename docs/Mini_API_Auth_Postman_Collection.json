{
  "info": {
    "name": "Mini API - Authentification",
    "description": "Collection Postman pour tester l'API d'authentification de Mini API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8090",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "verification_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "reset_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_email",
      "value": "test@example.com",
      "type": "string"
    },
    {
      "key": "test_password",
      "value": "password123",
      "type": "string"
    },
    {
      "key": "admin_email",
      "value": "admin@example.com",
      "type": "string"
    },
    {
      "key": "admin_password",
      "value": "admin123",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentification Utilisateur",
      "item": [
        {
          "name": "Inscription Client",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"accountType\": \"client\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Créer un compte client. L'utilisateur recevra un email de vérification."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('verification_token', response.verification_token || '');",
                  "    console.log('Token de vérification généré:', pm.collectionVariables.get('verification_token'));",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Inscription Propriétaire",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"owner@example.com\",\n  \"password\": \"{{test_password}}\",\n  \"firstName\": \"Owner\",\n  \"lastName\": \"Salon\",\n  \"accountType\": \"owner\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Créer un compte propriétaire de salon."
          }
        },
        {
          "name": "Vérification Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{verification_token}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/verify-email",
              "host": ["{{base_url}}"],
              "path": ["auth", "verify-email"]
            },
            "description": "Vérifier l'adresse email avec le token reçu par email. Utilisez le token de vérification généré lors de l'inscription."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('Email vérifié avec succès !');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Renvoi Email Vérification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/resend-verification",
              "host": ["{{base_url}}"],
              "path": ["auth", "resend-verification"]
            },
            "description": "Renvoyer l'email de vérification si l'utilisateur ne l'a pas reçu."
          }
        },
        {
          "name": "Connexion",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Se connecter avec email et mot de passe. Retourne un token JWT d'accès et d'actualisation."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh_token || '');",
                  "    console.log('Token JWT stocké:', pm.collectionVariables.get('auth_token'));",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Rafraîchir Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Obtenir un nouveau token d'accès à partir du refresh token."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    console.log('Nouveau token JWT stocké');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Profil Utilisateur",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Récupérer les informations du profil utilisateur connecté. Nécessite un token JWT valide dans l'Authorization header."
          }
        },
        {
          "name": "Demande Réinitialisation MDP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            },
            "description": "Demander la réinitialisation du mot de passe. Un email sera envoyé avec un lien de réinitialisation."
          }
        },
        {
          "name": "Réinitialisation MDP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{reset_token}}\",\n  \"password\": \"newpassword123\",\n  \"passwordConfirm\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "reset-password"]
            },
            "description": "Réinitialiser le mot de passe avec le token reçu par email."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.collectionVariables.set('test_password', 'newpassword123');",
                  "    console.log('Mot de passe mis à jour');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Administration",
      "item": [
        {
          "name": "Créer Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"System\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/admin/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "admin", "register"]
            },
            "description": "Créer un compte administrateur système. Nécessite d'être connecté en tant qu'admin."
          }
        },
        {
          "name": "Connexion Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/admin/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "admin", "login"]
            },
            "description": "Se connecter en tant qu'administrateur système."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    console.log('Token admin JWT stocké');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Connexion Sociale Admin (Firebase)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idToken\": \"votre_firebase_id_token_ici\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/admin/social-login",
              "host": ["{{base_url}}"],
              "path": ["auth", "admin", "social-login"]
            },
            "description": "Connexion sociale pour administrateur via Firebase (Google, Facebook, Apple)."
          }
        }
      ]
    },
    {
      "name": "Workflows Complets",
      "item": [
        {
          "name": "🔄 Inscription → Vérification → Connexion",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Workflow complet : 1. Inscription Client → 2. Vérifier Email → 3. Connexion → 4. Profil"
          }
        },
        {
          "name": "🔑 Connexion → Refresh → Profil",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Workflow de session : 1. Connexion → 2. Rafraîchir Token → 3. Accès Profil"
          }
        },
        {
          "name": "🔒 Réinitialisation MDP Complète",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Workflow MDP : 1. Demande Réinit → 2. Réinitialiser MDP → 3. Connexion avec nouveau MDP"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script exécuté avant chaque requête",
          "console.log('Envoi de la requête:', pm.request.method, pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script exécuté après chaque requête",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    console.log('✅ Réponse réussie:', pm.response.code);",
          "} else {",
          "    console.log('❌ Erreur:', pm.response.code, pm.response.status);",
          "    if (pm.response.json()) {",
          "        console.log('Détails:', pm.response.json());",
          "    }",
          "}"
        ]
      }
    }
  ]
}
